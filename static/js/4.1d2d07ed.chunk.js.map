{"version":3,"sources":["components/AsyncHook.tsx"],"names":["AsyncHook","props","parentCounter","_useState","useState","_useState2","Object","_Users_WashingtonHua_Projects_me_react_lifecycle_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","counter","setCounter","useEffect","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","onClick","c"],"mappings":"4HAiDeA,UA7CG,SAACC,GAAuB,IAChCC,EAAkBD,EAAlBC,cADgCC,EAEVC,mBAAS,GAFCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEjCK,EAFiCH,EAAA,GAExBI,EAFwBJ,EAAA,GAiCxC,OA7BAK,oBAAU,WAGR,OAFAC,QAAQC,IAAI,oBAEL,WACLD,QAAQC,IAAI,gCAEb,CAACJ,EAASN,IAEbQ,oBAAU,WAIR,OAFAC,QAAQC,IAAI,4BAEL,WACLD,QAAQC,IAAI,0CAEb,IAYHD,QAAQC,IAAI,oBAGVC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UAAQE,QAhBd,WACEN,QAAQC,IAAI,oBACZH,EAAW,SAAAS,GAAC,OAAIA,EAAI,MAchB,KACAL,EAAAC,EAAAC,cAAA,YAAOb,EAAP,MAAyBM,GACzBK,EAAAC,EAAAC,cAAA,UAAQE,QAbd,WACEN,QAAQC,IAAI,oBACZH,EAAW,SAAAS,GAAC,OAAIA,EAAI,MAWhB","file":"static/js/4.1d2d07ed.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ParentProps } from './interface'\n// import { showDivider } from './utils'\n\nconst AsyncHook = (props: ParentProps) => {\n  const { parentCounter } = props\n  const [counter, setCounter] = useState(0)\n\n  useEffect(() => {\n    console.log('AsyncHook Effect')\n\n    return () => {\n      console.log('AsyncHook Effect (cleanup)')\n    }\n  }, [counter, parentCounter])\n\n  useEffect(() => {\n    // console.log('================')\n    console.log('AsyncHook Effect (mount)')\n\n    return () => {\n      console.log('AsyncHook Effect (cleanup / unmount)')\n    }\n  }, [])\n\n  function increase () {\n    console.log('================')\n    setCounter(c => c + 1)\n  }\n\n  function decrease () {\n    console.log('================')\n    setCounter(c => c - 1)\n  }\n\n  console.log('AsyncHook render')\n\n  return (\n    <div className='async-hook'>\n      <div>\n        <span>AsyncHook: </span>\n        <button onClick={increase}>+</button>\n        <span>{parentCounter} - {counter}</span>\n        <button onClick={decrease}>-</button>\n      </div>\n    </div>\n  )\n}\n\nexport default AsyncHook\n"],"sourceRoot":""}